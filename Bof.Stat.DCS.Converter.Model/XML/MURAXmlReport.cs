//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0 using the following command:
// XmlSchemaClassGenerator.Console C:\Users\MIHO-D\source\repos\Bof.Stat.DCS\Bof.Stat.DCS.Converter\Schemas\MURA_1.0.xsd --namespace=Bof.Stat.DCS.Converter.Model.XML.MURA --collectionSettersMode=Public --nullableReferenceAttributes -v --enumAsString -0
namespace Bof.Stat.DCS.Converter.Model.XML.MURA
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("headerType", Namespace = "http://bof.fi/MURA")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HeaderType
    {

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("typeOfDataProviderIdentifier")]
        public string TypeOfDataProviderIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum length: 10.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(10)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(10)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("dataProviderIdentifier")]
        public string DataProviderIdentifier { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("typeOfReporterIdentifier")]
        public string TypeOfReporterIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum length: 10.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(10)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(10)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("reporterIdentifier")]
        public string ReporterIdentifier { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("surveyCode")]
        public string SurveyCode { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("reportingPeriodEnd", DataType = "date")]
        public System.DateTime ReportingPeriodEnd { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("frequency")]
        public string Frequency { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("creationDate", DataType = "dateTime")]
        public System.DateTime CreationDate { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(500)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("entitysComment")]
        public string EntitysComment { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ldType", Namespace = "http://bof.fi/MURA")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LdType
    {

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("allocationOfBalanceSheetItem")]
        public string AllocationOfBalanceSheetItem { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("transaction")]
        public string Transaction { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("instrument")]
        public string Instrument { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("securisationAndLoanTransfer")]
        public string SecurisationAndLoanTransfer { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum length: 7.</para>
        /// <para xml:lang="en">Maximum length: 7.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(7)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(7)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("transactionPeriod")]
        public string TransactionPeriod { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("purposeOfLoan")]
        public string PurposeOfLoan { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("intraGroupItem")]
        public string IntraGroupItem { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("collateral")]
        public string Collateral { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("internalIdentifier")]
        public string InternalIdentifier { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("sector")]
        public string Sector { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("industrialClassification")]
        public string IndustrialClassification { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("countryCode")]
        public string CountryCode { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("counterpartySector")]
        public string CounterpartySector { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("counterpartysHomeCountry")]
        public string CounterpartysHomeCountry { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("conversionCurrency")]
        public string ConversionCurrency { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("bookValue")]
        public decimal BookValue { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("bookValueCurrency")]
        public string BookValueCurrency { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("bookValueExclNonPerformingStock")]
        public decimal BookValueExclNonPerformingStockValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BookValueExclNonPerformingStock property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BookValueExclNonPerformingStockValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> BookValueExclNonPerformingStock
        {
            get
            {
                if (this.BookValueExclNonPerformingStockValueSpecified)
                {
                    return this.BookValueExclNonPerformingStockValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BookValueExclNonPerformingStockValue = value.GetValueOrDefault();
                this.BookValueExclNonPerformingStockValueSpecified = value.HasValue;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -9999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-9999.99", "9999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("annualisedAgreedRate")]
        public decimal AnnualisedAgreedRateValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnnualisedAgreedRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AnnualisedAgreedRateValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -9999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> AnnualisedAgreedRate
        {
            get
            {
                if (this.AnnualisedAgreedRateValueSpecified)
                {
                    return this.AnnualisedAgreedRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AnnualisedAgreedRateValue = value.GetValueOrDefault();
                this.AnnualisedAgreedRateValueSpecified = value.HasValue;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -9999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-9999.99", "9999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("annualPercentageRateOfCharge")]
        public decimal AnnualPercentageRateOfChargeValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnnualPercentageRateOfCharge property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AnnualPercentageRateOfChargeValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -9999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> AnnualPercentageRateOfCharge
        {
            get
            {
                if (this.AnnualPercentageRateOfChargeValueSpecified)
                {
                    return this.AnnualPercentageRateOfChargeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AnnualPercentageRateOfChargeValue = value.GetValueOrDefault();
                this.AnnualPercentageRateOfChargeValueSpecified = value.HasValue;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("interestPayable")]
        public decimal InterestPayableValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestPayable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool InterestPayableValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> InterestPayable
        {
            get
            {
                if (this.InterestPayableValueSpecified)
                {
                    return this.InterestPayableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestPayableValue = value.GetValueOrDefault();
                this.InterestPayableValueSpecified = value.HasValue;
            }
        }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("firmSize")]
        public string FirmSize { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("interestRateLinkage")]
        public string InterestRateLinkage { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("initialPeriodOfFixation")]
        public string InitialPeriodOfFixation { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("originalMaturity")]
        public string OriginalMaturity { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("invidualLoanLossesAndImpairements")]
        public decimal InvidualLoanLossesAndImpairementsValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InvidualLoanLossesAndImpairements property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool InvidualLoanLossesAndImpairementsValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> InvidualLoanLossesAndImpairements
        {
            get
            {
                if (this.InvidualLoanLossesAndImpairementsValueSpecified)
                {
                    return this.InvidualLoanLossesAndImpairementsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InvidualLoanLossesAndImpairementsValue = value.GetValueOrDefault();
                this.InvidualLoanLossesAndImpairementsValueSpecified = value.HasValue;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("restType", Namespace = "http://bof.fi/MURA")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestType
    {

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("allocationOfBalanceSheetItem")]
        public string AllocationOfBalanceSheetItem { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("transaction")]
        public string Transaction { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("instrument")]
        public string Instrument { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("intraGroupItem")]
        public string IntraGroupItem { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("internalIdentifier")]
        public string InternalIdentifier { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("sector")]
        public string Sector { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("countryCode")]
        public string CountryCode { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("conversionCurrency")]
        public string ConversionCurrency { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("bookValue")]
        public decimal BookValue { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("bookValueCurrency")]
        public string BookValueCurrency { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("sbsType", Namespace = "http://bof.fi/MURA")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SbsType
    {

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("allocationOfBalanceSheetItem")]
        public string AllocationOfBalanceSheetItem { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("transaction")]
        public string Transaction { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("instrument")]
        public string Instrument { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("internalIdentifier")]
        public string InternalIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum length: 12.</para>
        /// <para xml:lang="en">Maximum length: 12.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(12)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(12)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("isinCode")]
        public string IsinCode { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.999999.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.999999.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Total number of digits: 24.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.999999", "999999999999999999.999999")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("numberOfInstrument")]
        public decimal NumberOfInstrumentValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfInstrument property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NumberOfInstrumentValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.999999.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.999999.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Total number of digits: 24.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> NumberOfInstrument
        {
            get
            {
                if (this.NumberOfInstrumentValueSpecified)
                {
                    return this.NumberOfInstrumentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberOfInstrumentValue = value.GetValueOrDefault();
                this.NumberOfInstrumentValueSpecified = value.HasValue;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalNominalValue")]
        public decimal TotalNominalValueValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalNominalValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalNominalValueValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> TotalNominalValue
        {
            get
            {
                if (this.TotalNominalValueValueSpecified)
                {
                    return this.TotalNominalValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalNominalValueValue = value.GetValueOrDefault();
                this.TotalNominalValueValueSpecified = value.HasValue;
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("nominalValueCurrency")]
        public string NominalValueCurrency { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalMarketValueDirty")]
        public decimal TotalMarketValueDirtyValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalMarketValueDirty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalMarketValueDirtyValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> TotalMarketValueDirty
        {
            get
            {
                if (this.TotalMarketValueDirtyValueSpecified)
                {
                    return this.TotalMarketValueDirtyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalMarketValueDirtyValue = value.GetValueOrDefault();
                this.TotalMarketValueDirtyValueSpecified = value.HasValue;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 3.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(3)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("marketCurrencyDirty")]
        public string MarketCurrencyDirty { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalMarketValueClean")]
        public decimal TotalMarketValueCleanValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalMarketValueClean property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalMarketValueCleanValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> TotalMarketValueClean
        {
            get
            {
                if (this.TotalMarketValueCleanValueSpecified)
                {
                    return this.TotalMarketValueCleanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalMarketValueCleanValue = value.GetValueOrDefault();
                this.TotalMarketValueCleanValueSpecified = value.HasValue;
            }
        }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("marketCurrencyClean")]
        public string MarketCurrencyClean { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("intraGroupItem")]
        public string IntraGroupItem { get; set; }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("directInvestment")]
        public bool DirectInvestmentValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DirectInvestment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DirectInvestmentValueSpecified { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> DirectInvestment
        {
            get
            {
                if (this.DirectInvestmentValueSpecified)
                {
                    return this.DirectInvestmentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DirectInvestmentValue = value.GetValueOrDefault();
                this.DirectInvestmentValueSpecified = value.HasValue;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("dividend")]
        public decimal DividendValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Dividend property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DividendValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Dividend
        {
            get
            {
                if (this.DividendValueSpecified)
                {
                    return this.DividendValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DividendValue = value.GetValueOrDefault();
                this.DividendValueSpecified = value.HasValue;
            }
        }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("dividendCurrency")]
        public string DividendCurrency { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("counterpartysSector")]
        public string CounterpartysSector { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("counterpartysHomeCountry")]
        public string CounterpartysHomeCountry { get; set; }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("issueDate", DataType = "date")]
        public System.DateTime IssueDateValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IssueDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IssueDateValueSpecified { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> IssueDate
        {
            get
            {
                if (this.IssueDateValueSpecified)
                {
                    return this.IssueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IssueDateValue = value.GetValueOrDefault();
                this.IssueDateValueSpecified = value.HasValue;
            }
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("maturityDate", DataType = "date")]
        public System.DateTime MaturityDateValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaturityDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaturityDateValueSpecified { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> MaturityDate
        {
            get
            {
                if (this.MaturityDateValueSpecified)
                {
                    return this.MaturityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaturityDateValue = value.GetValueOrDefault();
                this.MaturityDateValueSpecified = value.HasValue;
            }
        }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("countryOfIssue")]
        public string CountryOfIssue { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("typeOfIssuersIdentifier")]
        public string TypeOfIssuersIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("issuersIdentifier")]
        public string IssuersIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("issuersName")]
        public string IssuersName { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("issuersSector")]
        public string IssuersSector { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("issuersHomeCountry")]
        public string IssuersHomeCountry { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("bsType", Namespace = "http://bof.fi/MURA")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BsType
    {

        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("reportersName")]
        public string ReportersName { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("totalAssets")]
        public decimal TotalAssets { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("muraReport", Namespace = "http://bof.fi/MURA", AnonymousType = true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("muraReport", Namespace = "http://bof.fi/MURA")]
    public partial class MuraReport
    {

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("header")]
        public Bof.Stat.DCS.Converter.Model.XML.MURA.HeaderType Header { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.LdType> _ldRecords;

        [System.Xml.Serialization.XmlArrayAttribute("ldRecords")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ld", Namespace = "http://bof.fi/MURA")]
        public System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.LdType> LdRecords
        {
            get
            {
                return _ldRecords;
            }
            set
            {
                _ldRecords = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LdRecords collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LdRecordsSpecified
        {
            get
            {
                return ((this.LdRecords != null)
                            && (this.LdRecords.Count != 0));
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MuraReport" /> class.</para>
        /// </summary>
        public MuraReport()
        {
            this._ldRecords = new System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.LdType>();
            this._restRecords = new System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.RestType>();
            this._sbsRecords = new System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.SbsType>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.RestType> _restRecords;

        [System.Xml.Serialization.XmlArrayAttribute("restRecords")]
        [System.Xml.Serialization.XmlArrayItemAttribute("rest", Namespace = "http://bof.fi/MURA")]
        public System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.RestType> RestRecords
        {
            get
            {
                return _restRecords;
            }
            set
            {
                _restRecords = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RestRecords collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RestRecordsSpecified
        {
            get
            {
                return ((this.RestRecords != null)
                            && (this.RestRecords.Count != 0));
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.SbsType> _sbsRecords;

        [System.Xml.Serialization.XmlArrayAttribute("sbsRecords")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sbs", Namespace = "http://bof.fi/MURA")]
        public System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.SbsType> SbsRecords
        {
            get
            {
                return _sbsRecords;
            }
            set
            {
                _sbsRecords = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SbsRecords collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SbsRecordsSpecified
        {
            get
            {
                return ((this.SbsRecords != null)
                            && (this.SbsRecords.Count != 0));
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("bsRecords")]
        public MuraReportBsRecords BsRecords { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("schemaVersion")]
        public string SchemaVersion { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MuraReportLdRecords", Namespace = "http://bof.fi/MURA", AnonymousType = true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MuraReportLdRecords
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.LdType> _ld;

        [System.Xml.Serialization.XmlElementAttribute("ld")]
        public System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.LdType> Ld
        {
            get
            {
                return _ld;
            }
            set
            {
                _ld = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Ld collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LdSpecified
        {
            get
            {
                return ((this.Ld != null)
                            && (this.Ld.Count != 0));
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MuraReportLdRecords" /> class.</para>
        /// </summary>
        public MuraReportLdRecords()
        {
            this._ld = new System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.LdType>();
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MuraReportRestRecords", Namespace = "http://bof.fi/MURA", AnonymousType = true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MuraReportRestRecords
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.RestType> _rest;

        [System.Xml.Serialization.XmlElementAttribute("rest")]
        public System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.RestType> Rest
        {
            get
            {
                return _rest;
            }
            set
            {
                _rest = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Rest collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RestSpecified
        {
            get
            {
                return ((this.Rest != null)
                            && (this.Rest.Count != 0));
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MuraReportRestRecords" /> class.</para>
        /// </summary>
        public MuraReportRestRecords()
        {
            this._rest = new System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.RestType>();
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MuraReportSbsRecords", Namespace = "http://bof.fi/MURA", AnonymousType = true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MuraReportSbsRecords
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.SbsType> _sbs;

        [System.Xml.Serialization.XmlElementAttribute("sbs")]
        public System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.SbsType> Sbs
        {
            get
            {
                return _sbs;
            }
            set
            {
                _sbs = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Sbs collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SbsSpecified
        {
            get
            {
                return ((this.Sbs != null)
                            && (this.Sbs.Count != 0));
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MuraReportSbsRecords" /> class.</para>
        /// </summary>
        public MuraReportSbsRecords()
        {
            this._sbs = new System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.MURA.SbsType>();
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MuraReportBsRecords", Namespace = "http://bof.fi/MURA", AnonymousType = true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MuraReportBsRecords
    {

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("bs")]
        public Bof.Stat.DCS.Converter.Model.XML.MURA.BsType Bs { get; set; }
    }
}
