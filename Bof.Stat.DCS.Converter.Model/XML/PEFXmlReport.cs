//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0 using the following command:
// XmlSchemaClassGenerator C:\Users\MIHO-D\source\repos\Bof.Stat.DCS\Bof.Stat.DCS.Converter\Schemas\PEF_1.0.xsd -0 --namespace=Bof.Stat.DCS.Converter.Model.XML.PEF --collectionSettersMode=Public --nullableReferenceAttributes -v --enumAsString
namespace Bof.Stat.DCS.Converter.Model.XML.PEF
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("headerType", Namespace = "http://bof.fi/PEF")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HeaderType
    {

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("typeOfManagementCompanyIdentifier")]
        public string TypeOfManagementCompanyIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum length: 10.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(10)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(10)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("managementCompanyIdentifier")]
        public string ManagementCompanyIdentifier { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("typeOfReporterIdentifier")]
        public string TypeOfReporterIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 12.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(12)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("reporterIdentifier")]
        public string ReporterIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 300.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(300)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("reporterName")]
        public string ReporterName { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("surveyCode")]
        public string SurveyCode { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("reportingPeriodEnd", DataType = "date")]
        public System.DateTime ReportingPeriodEnd { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("frequency")]
        public string Frequency { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("creationDate", DataType = "dateTime")]
        public System.DateTime CreationDate { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(500)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("entitysComment")]
        public string EntitysComment { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ifType", Namespace = "http://bof.fi/PEF")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IfType
    {

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -9999999999999999.9999.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999999999.9999.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 4.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-9999999999999999.9999", "9999999999999999.9999")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("exchangeRate")]
        public decimal ExchangeRate { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("currencyOfExchangeRate")]
        public string CurrencyOfExchangeRate { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("balanceSheetTotal")]
        public decimal BalanceSheetTotal { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("balanceSheetCurrency")]
        public string BalanceSheetCurrency { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -9999999999.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-9999999999", "9999999999")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("totalNumberOfUnitholders")]
        public long TotalNumberOfUnitholders { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("pefType", Namespace = "http://bof.fi/PEF")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PefType
    {

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("category")]
        public string Category { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("contractType")]
        public string ContractType { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("instrument")]
        public string Instrument { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("internalIdentificationCode")]
        public string InternalIdentificationCode { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum length: 12.</para>
        /// <para xml:lang="en">Maximum length: 12.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(12)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(12)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("isinCode")]
        public string IsinCode { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.999999.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.999999.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Total number of digits: 24.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.999999", "999999999999999999.999999")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("numberOfInstruments")]
        public decimal NumberOfInstrumentsValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfInstruments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NumberOfInstrumentsValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.999999.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.999999.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 6.</para>
        /// <para xml:lang="en">Total number of digits: 24.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> NumberOfInstruments
        {
            get
            {
                if (this.NumberOfInstrumentsValueSpecified)
                {
                    return this.NumberOfInstrumentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberOfInstrumentsValue = value.GetValueOrDefault();
                this.NumberOfInstrumentsValueSpecified = value.HasValue;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalNominalValue")]
        public decimal TotalNominalValueValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalNominalValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalNominalValueValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> TotalNominalValue
        {
            get
            {
                if (this.TotalNominalValueValueSpecified)
                {
                    return this.TotalNominalValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalNominalValueValue = value.GetValueOrDefault();
                this.TotalNominalValueValueSpecified = value.HasValue;
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("nominalValueCurrency")]
        public string NominalValueCurrency { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalMarketValueDirty")]
        public decimal TotalMarketValueDirtyValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalMarketValueDirty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalMarketValueDirtyValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> TotalMarketValueDirty
        {
            get
            {
                if (this.TotalMarketValueDirtyValueSpecified)
                {
                    return this.TotalMarketValueDirtyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalMarketValueDirtyValue = value.GetValueOrDefault();
                this.TotalMarketValueDirtyValueSpecified = value.HasValue;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalMarketValueClean")]
        public decimal TotalMarketValueCleanValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalMarketValueClean property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalMarketValueCleanValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> TotalMarketValueClean
        {
            get
            {
                if (this.TotalMarketValueCleanValueSpecified)
                {
                    return this.TotalMarketValueCleanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalMarketValueCleanValue = value.GetValueOrDefault();
                this.TotalMarketValueCleanValueSpecified = value.HasValue;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("capitalFlows")]
        public decimal CapitalFlowsValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CapitalFlows property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CapitalFlowsValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> CapitalFlows
        {
            get
            {
                if (this.CapitalFlowsValueSpecified)
                {
                    return this.CapitalFlowsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CapitalFlowsValue = value.GetValueOrDefault();
                this.CapitalFlowsValueSpecified = value.HasValue;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-999999999999999999.99", "999999999999999999.99")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("loanLosses")]
        public decimal LoanLossesValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LoanLossesValueSpecified { get; set; }

        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -999999999999999999.99.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999999999999.99.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Total number of digits: 20.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> LoanLosses
        {
            get
            {
                if (this.LoanLossesValueSpecified)
                {
                    return this.LoanLossesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanLossesValue = value.GetValueOrDefault();
                this.LoanLossesValueSpecified = value.HasValue;
            }
        }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("typeOfCounterpartysIdentifier")]
        public string TypeOfCounterpartysIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("counterpartysIdentifier")]
        public string CounterpartysIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("counterpartysName")]
        public string CounterpartysName { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("counterpartysSector")]
        public string CounterpartysSector { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("counterpartysHomeCountry")]
        public string CounterpartysHomeCountry { get; set; }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("issueDate", DataType = "date")]
        public System.DateTime IssueDateValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IssueDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IssueDateValueSpecified { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> IssueDate
        {
            get
            {
                if (this.IssueDateValueSpecified)
                {
                    return this.IssueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IssueDateValue = value.GetValueOrDefault();
                this.IssueDateValueSpecified = value.HasValue;
            }
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("maturityDate", DataType = "date")]
        public System.DateTime MaturityDateValue { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaturityDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaturityDateValueSpecified { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> MaturityDate
        {
            get
            {
                if (this.MaturityDateValueSpecified)
                {
                    return this.MaturityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaturityDateValue = value.GetValueOrDefault();
                this.MaturityDateValueSpecified = value.HasValue;
            }
        }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("typeOfIssuersIdentifier")]
        public string TypeOfIssuersIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("issuersIdentifier")]
        public string IssuersIdentifier { get; set; }

        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("issuersName")]
        public string IssuersName { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("issuersSector")]
        public string IssuersSector { get; set; }

        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("issuersHomeCountry")]
        public string IssuersHomeCountry { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("pefReport", Namespace = "http://bof.fi/PEF", AnonymousType = true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("pefReport", Namespace = "http://bof.fi/PEF")]
    public partial class PefReport
    {

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("header")]
        public Bof.Stat.DCS.Converter.Model.XML.PEF.HeaderType Header { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ifRecords")]
        public PefReportIfRecords IfRecords { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.PEF.PefType> _pefRecords;

        [System.Xml.Serialization.XmlArrayAttribute("pefRecords")]
        [System.Xml.Serialization.XmlArrayItemAttribute("pef", Namespace = "http://bof.fi/PEF")]
        public System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.PEF.PefType> PefRecords
        {
            get
            {
                return _pefRecords;
            }
            set
            {
                _pefRecords = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PefRecords collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PefRecordsSpecified
        {
            get
            {
                return ((this.PefRecords != null)
                            && (this.PefRecords.Count != 0));
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PefReport" /> class.</para>
        /// </summary>
        public PefReport()
        {
            this._pefRecords = new System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.PEF.PefType>();
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("schemaVersion")]
        public string SchemaVersion { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PefReportIfRecords", Namespace = "http://bof.fi/PEF", AnonymousType = true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PefReportIfRecords
    {

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("if")]
        public Bof.Stat.DCS.Converter.Model.XML.PEF.IfType If { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PefReportPefRecords", Namespace = "http://bof.fi/PEF", AnonymousType = true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PefReportPefRecords
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.PEF.PefType> _pef;

        [System.Xml.Serialization.XmlElementAttribute("pef")]
        public System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.PEF.PefType> Pef
        {
            get
            {
                return _pef;
            }
            set
            {
                _pef = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Pef collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PefSpecified
        {
            get
            {
                return ((this.Pef != null)
                            && (this.Pef.Count != 0));
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PefReportPefRecords" /> class.</para>
        /// </summary>
        public PefReportPefRecords()
        {
            this._pef = new System.Collections.ObjectModel.Collection<Bof.Stat.DCS.Converter.Model.XML.PEF.PefType>();
        }
    }
}
